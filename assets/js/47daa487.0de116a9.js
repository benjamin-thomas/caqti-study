"use strict";(self.webpackChunkcaqti_study=self.webpackChunkcaqti_study||[]).push([[7373],{2515:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>n,metadata:()=>o,toc:()=>c});var l=s(4848),r=s(8453);const n={},i="Hello, tests!",o={id:"hello-tests/README",title:"Hello, tests!",description:"To run tests, we will use:",source:"@site/study/hello-tests/README.md",sourceDirName:"hello-tests",slug:"/hello-tests/",permalink:"/study/hello-tests/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Hello, ppx_rapper!",permalink:"/study/hello-ppx_rapper/"},next:{title:"Hello, World!",permalink:"/study/hello-world/"}},d={},c=[];function a(e){const t={a:"a",code:"code",em:"em",h1:"h1",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.h1,{id:"hello-tests",children:"Hello, tests!"}),"\n",(0,l.jsx)(t.p,{children:"To run tests, we will use:"}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.a,{href:"https://github.com/janestreet/ppx_inline_test",children:"ppx_inline_test"})," (easy)"]}),"\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.a,{href:"https://github.com/janestreet/ppx_assert",children:"ppx_assert"})," (harder but provides better error messages)"]}),"\n"]}),"\n",(0,l.jsxs)(t.p,{children:["Although we ",(0,l.jsx)(t.em,{children:"could"}),' define "inline tests" inside our library code, we will separate them inside a ',(0,l.jsx)(t.code,{children:"test"})," folder."]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{children:"cd ./01-hello-tests\ndune runtest --watch\n"})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}}}]);